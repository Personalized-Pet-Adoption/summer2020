# Generated by Django 3.0.3 on 2020-07-14 22:23

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('species', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True)),
                ('breed', models.CharField(blank=True, max_length=64)),
                ('postal_code', models.IntegerField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('post_date', models.DateField(default=datetime.datetime.now)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('source_website', models.CharField(blank=True, max_length=200)),
                ('gender', models.CharField(max_length=64)),
                ('weight', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Immune',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('neuter', models.BooleanField(default=False)),
                ('heartgard', models.BooleanField(default=False)),
                ('nexgard', models.BooleanField(default=False)),
                ('rabies', models.DateField(null=True)),
                ('da2pp', models.DateField(null=True)),
                ('intra2', models.DateField(null=True)),
                ('extrainfo', models.TextField(null=True)),
                ('record_date', models.DateField()),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='petAdoption.Pet')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='petAdoption.Pet')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(max_length=255)),
                ('photo', models.ImageField(blank=True, upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('pets_on_sale', models.ManyToManyField(blank=True, to='petAdoption.Pet')),
            ],
            options={
                'verbose_name': 'Seller',
                'verbose_name_plural': 'Sellers',
            },
            bases=('petAdoption.customuser',),
        ),
        migrations.CreateModel(
            name='Adopter',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('favorites', models.ManyToManyField(blank=True, to='petAdoption.Pet')),
            ],
            options={
                'verbose_name': 'Adopter',
                'verbose_name_plural': 'Adopters',
            },
            bases=('petAdoption.customuser',),
        ),
    ]
